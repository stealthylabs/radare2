name: Continuous build
on:
  push:
    branches:
      - master

jobs:
  build-continuous-deb:
    name: Continuous deb build
    runs-on: ubuntu-latest
    container: debian:buster
    steps:
    - name: Install tools
      run: apt-get update && apt-get install --yes patch unzip git gcc make curl pkg-config xz-utils wget file python
    - name: Checkout r2
      run: |
        git clone https://github.com/${{ github.repository }}
        cd radare2
        git fetch origin ${{ github.ref }}
        git checkout -b local_branch FETCH_HEAD
    - name: Extract r2 version
      shell: bash
      run: echo "##[set-output name=branch;]$(python sys/version.py)"
      id: extract_version
      working-directory: radare2
    - name: Preparing the deb package
      run: |
        sys/debian.sh
      working-directory: radare2
    - name: Upload deb file
      uses: actions/upload-artifact@v2
      with:
        name: radare2_${{ steps.extract_version.outputs.branch }}_amd64.deb
        path: radare2/radare2_${{ steps.extract_version.outputs.branch }}_amd64.deb
    - name: Upload -dev deb file
      uses: actions/upload-artifact@v2
      with:
        name: radare2-dev_${{ steps.extract_version.outputs.branch }}_amd64.deb
        path: radare2/radare2-dev_${{ steps.extract_version.outputs.branch }}_amd64.deb

  create-release:
    name: Create/Update pre-release Continuous build
    runs-on: ubuntu-latest
    needs: [build-continuous-deb]
    steps:
    - uses: actions/checkout@v2
    - name: Extract r2 version
      shell: bash
      run: echo "##[set-output name=branch;]$(python sys/version.py)"
      id: extract_version
    - uses: actions/download-artifact@v2
    - name: Display structure of downloaded files
      run: ls -R
    - name: Upload files
      shell: bash
      run: .github/upload.sh ./radare2_${{ steps.extract_version.outputs.branch }}_amd64.deb/radare2_${{ steps.extract_version.outputs.branch }}_amd64.deb ./radare2-dev_${{ steps.extract_version.outputs.branch }}_amd64.deb/radare2-dev_${{ steps.extract_version.outputs.branch }}_amd64.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        UPLOADTOOL_BODY: Continuous build ${{ github.sha }}
