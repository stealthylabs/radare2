NAME=tcc-star
FILE=bins/elf/ls
CMDS=<<EOF
tcc
tcc-*
tcc
EOF
EXPECT=<<EOF
ms
amd64
swift
reg
EOF
RUN

NAME=tcc
FILE=bins/elf/ls
CMDS=tcc
EXPECT=<<EOF
ms
amd64
swift
reg
EOF
RUN

NAME=tccj, tccl, tcc* outputs
FILE=bins/elf/ls
CMDS=<<EOF
tccj
tccl
tcc*
EOF
EXPECT=<<EOF
["rax ms (rcx, rdx, r8, r9, stack);","rax amd64 (rdi, rsi, rdx, rcx, r8, r9, xmm0, xmm1, xmm2, xmm3, xmm4);","rax r13.swift (rdi, rsi, rdx, rcx, r8, r9, xmm0, xmm1, xmm2, xmm3, xmm4) r12;","rdi reg (rdi, rsi, rdx, rcx);"]
rax ms (rcx, rdx, r8, r9, stack);
rax amd64 (rdi, rsi, rdx, rcx, r8, r9, xmm0, xmm1, xmm2, xmm3, xmm4);
rax r13.swift (rdi, rsi, rdx, rcx, r8, r9, xmm0, xmm1, xmm2, xmm3, xmm4) r12;
rdi reg (rdi, rsi, rdx, rcx);
tfc rax ms (rcx, rdx, r8, r9, stack);
tfc rax amd64 (rdi, rsi, rdx, rcx, r8, r9, xmm0, xmm1, xmm2, xmm3, xmm4);
tfc rax r13.swift (rdi, rsi, rdx, rcx, r8, r9, xmm0, xmm1, xmm2, xmm3, xmm4) r12;
tfc rdi reg (rdi, rsi, rdx, rcx);
EOF
RUN

NAME=tcc
FILE=-
CMDS=<<EOF
e asm.arch=x86
e asm.bits=32
?e 1
"tcc eax jeje(ebx, ecx)"
tcc jeje
tcc- jeje
?e 2
"tcc eax    jeje(ebx, ecx)"
tcc   jeje
tcc- jeje
?e 3
"tcc eax  jeje   (ebx, ecx)"
tcc   jeje
tcc- jeje
?e 4
"tcc   eax  jeje   (ebx, ecx)"
tcc jeje
tcc- jeje
?e 5
"tcc   eax  jeje   ( ebx, ecx )"
tcc jeje
tcc- jeje
?e 6
"tcc   eax  jeje   ( 	ebx  ,  ecx  )"
tcc jeje
tcc- jeje
EOF
EXPECT=<<EOF
1
eax jeje (ebx, ecx);
2
eax jeje (ebx, ecx);
3
eax jeje (ebx, ecx);
4
eax jeje (ebx, ecx);
5
eax jeje (ebx, ecx);
6
eax jeje (ebx, ecx);
EOF
RUN
